#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/led/led.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "aeliux_4.dtsi"

/ {
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;
        col-gpios
            = <&pro_micro 20 (GPIO_ACTIVE_HIGH)> // COL0
            , <&pro_micro 19 (GPIO_ACTIVE_HIGH)> // COL1
            , <&pro_micro 18 (GPIO_ACTIVE_HIGH)> // COL2
            , <&pro_micro 15 (GPIO_ACTIVE_HIGH)> // COL3
            , <&pro_micro 16 (GPIO_ACTIVE_HIGH)> // COL4
            , <&pro_micro 14 (GPIO_ACTIVE_HIGH)> // COL5
            , <&pro_micro 10 (GPIO_ACTIVE_HIGH)> // COL6
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH)> // COL7
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH)> // COL8
            , <&pro_micro 2 (GPIO_ACTIVE_HIGH)> // COL9
            , <&pro_micro 0 (GPIO_ACTIVE_HIGH)> // COL10
            , <&pro_micro 1 (GPIO_ACTIVE_HIGH)> // COL11
            ;
        row-gpios
            = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // ROW0
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // ROW1
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // ROW2
            , <&pro_micro 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // ROW3
            ;
    };

    aliases {
        led-red = &led0; 
        led-blue = &led1;
        led-green = &led2;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";
        led0: led_0 {
            gpios = <&gpio1 1 (GPIO_ACTIVE_HIGH)>;  // red LED, connected to P1.01
        };
        led1: led_1 {
            gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH)>;  // blue LED, connected to P1.02
        };
        led2: led_2 {
            gpios = <&gpio1 7 (GPIO_ACTIVE_HIGH)>;  // green LED, connected to P1.07
        };
    };
};

&pinctrl {
    // backlight
    pwm0_default: pwm0_default {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 1)>,
                    <NRF_PSEL(PWM_OUT1, 1, 2)>,
                    <NRF_PSEL(PWM_OUT2, 1, 7)>;
        };
    };
    pwm0_sleep: pwm0_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 1)>,
                    <NRF_PSEL(PWM_OUT1, 1, 2)>,
                    <NRF_PSEL(PWM_OUT2, 1, 7)>;
            low-power-enable;
        };
    };
};

/ {
    backlight: pwmleds {
        compatible = "pwm-leds";
        label = "Backlight LEDs";
        pwm_led_0: pwm_led_0 {
            pwms = <&pwm0 0 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
        };
        pwm_led_1: pwm_led_1 {
            pwms = <&pwm0 1 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
        };
        pwm_led_2: pwm_led_2 {
            pwms = <&pwm0 2 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
        };
    };
};

&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_default>;
    pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};

/ {
	chosen {
		 zmk,backlight = &backlight;
	};
};
